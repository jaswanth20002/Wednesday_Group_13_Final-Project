/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.DonorRole;

import Model.EcoSystem;
import Model.Enterprise.Enterprise;
import Model.Organization.DoctorOrganization;
import Model.Organization.Organization;
import Model.Donor.Donor;
import Model.Donor.Record;
import Model.Donor.RecordHistory;
import Model.Organization.DonorOrganization;
import Model.Organization.PatientOrganization;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.DonorDoctorWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JPanel;
import javax.swing.JOptionPane;


/**
 *
 * @author divya
 */
public class AddRecordJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;    
    private EcoSystem ecoSystem;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private DonorOrganization donorOrganization;
    private Donor donor;

    /**
     * Creates new form AddRecordJPanel
     */
    public AddRecordJPanel(JPanel userProcessContainer,UserAccount userAccount, DonorOrganization donorOrganization, Enterprise enterprise,EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = userAccount;
        this.donorOrganization = (DonorOrganization)donorOrganization;
        this.enterprise = enterprise;
        this.donor=userAccount.getDonor();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        lblMedicalHistory = new javax.swing.JLabel();
        bloodGroupJTextField = new javax.swing.JTextField();
        lblLastDonationDate = new javax.swing.JLabel();
        organDonorJTextField = new javax.swing.JTextField();
        addRecordJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        lblOrganDonor = new javax.swing.JLabel();
        lblBloodGroup = new javax.swing.JLabel();
        medicalHistoryJTextField = new javax.swing.JTextField();
        lastDonationDateJTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 255, 255));
        setForeground(new java.awt.Color(204, 255, 255));

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 204));
        jLabel12.setText("Add Donor Record");

        lblMedicalHistory.setText("Medical History");

        bloodGroupJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodGroupJTextFieldActionPerformed(evt);
            }
        });

        lblLastDonationDate.setText("Last Donation Date");

        addRecordJButton.setText("Add Record ");
        addRecordJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRecordJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        lblOrganDonor.setText("Organ Donor");

        lblBloodGroup.setText("Blood Group");

        medicalHistoryJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalHistoryJTextFieldActionPerformed(evt);
            }
        });

        lastDonationDateJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastDonationDateJTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(bloodGroupJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblOrganDonor)
                                .addGap(89, 89, 89)
                                .addComponent(organDonorJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMedicalHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLastDonationDate))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(medicalHistoryJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(lastDonationDateJTextField)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(backJButton)
                        .addGap(153, 153, 153)
                        .addComponent(addRecordJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodGroupJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBloodGroup))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organDonorJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrganDonor))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicalHistoryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedicalHistory))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lastDonationDateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastDonationDate))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(addRecordJButton)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bloodGroupJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodGroupJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodGroupJTextFieldActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

        //        userProcessContainer.remove(this);
        //        Component[] componentArray = userProcessContainer.getComponents();
        //        Component component = componentArray[componentArray.length - 1];
        //        ManageMyVitalSignsAndFitnessRecordJPanel dwjp = (ManageMyVitalSignsAndFitnessRecordJPanel) component;
        //        dwjp.populateTable();
        //        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        //        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void medicalHistoryJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalHistoryJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medicalHistoryJTextFieldActionPerformed

    private void lastDonationDateJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastDonationDateJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastDonationDateJTextFieldActionPerformed

    private void addRecordJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRecordJButtonActionPerformed
        // TODO add your handling code here:
        try{
            String bloodGroup = bloodGroupJTextField.getText();
            String organDonor = organDonorJTextField.getText();
            String medicalHistory = medicalHistoryJTextField.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date lastDonationDate = dateFormat.parse(lastDonationDateJTextField.getText());

            Record d = donor.getRecordHistory().addRecord();
            d.setBloodGroup(bloodGroup);
            d.setOrganDonor(organDonor);
            d.setMedicalHistory(medicalHistory);
            d.setLastDonationDate(lastDonationDate);

            //            Record do = donor.getRecordHistory().addRecord();

            //            do.setBloodGroup(bloodGroup);
            //            do.setOrganDonor(organDonor);
            //            do.setMedicalHistory(medicalHistory);
            //            do.setLastDonationDate(lastDonationDate);

            //To work on below
            //-----------------------------------------------------------------------------------------------------
            for(Organization o :enterprise.getOrganizationDirectory().getOrganizationList()){
                if(o instanceof DoctorOrganization){
                    DoctorOrganization dO =(DoctorOrganization)o;
                    DonorDoctorWorkRequest request = new DonorDoctorWorkRequest();
                    request.setDate();
                    request.setRecord(d);
                    dO.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
            }

            JOptionPane.showMessageDialog(null, "Add Record Information Successfully!", "Warning", JOptionPane.WARNING_MESSAGE);
            resetFields();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Alert! Please enter appropriate values! ", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addRecordJButtonActionPerformed

      private void resetFields() {
        bloodGroupJTextField.setText("");
        organDonorJTextField.setText("");
        medicalHistoryJTextField.setText("");
        lastDonationDateJTextField.setText("");    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRecordJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField bloodGroupJTextField;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JTextField lastDonationDateJTextField;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblLastDonationDate;
    private javax.swing.JLabel lblMedicalHistory;
    private javax.swing.JLabel lblOrganDonor;
    private javax.swing.JTextField medicalHistoryJTextField;
    private javax.swing.JTextField organDonorJTextField;
    // End of variables declaration//GEN-END:variables
}
