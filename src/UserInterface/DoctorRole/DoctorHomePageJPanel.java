/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Model.EcoSystem;
import Model.Enterprise.Enterprise;
import Model.Enterprise.GovernmentEnterprise;
import Model.Network.Network;
import Model.Organization.DoctorOrganization;
import Model.Organization.HealthAndHumanServicesOrganization;
import Model.Organization.Organization;
import Model.Organization.PatientOrganization;
import Model.Patient.Patient;
import Model.Patient.PatientDirectory;
import Model.Patient.Record;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.PatientDoctorWorkRequest;
import Model.WorkQueue.WorkRequest;
import UserInterface.PatientRole.ViewUpdateRecordDetailsJPanel;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Divya
 */
public class DoctorHomePageJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private EcoSystem ecoSystem;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private PatientOrganization patientOrganization;
    //private PatientDirectory patientDirectory;

    /**
     * Creates new form DoctorHomePageJPanel
     */
    public DoctorHomePageJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = (DoctorOrganization)organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.ecoSystem = ecoSystem;
        this.patientOrganization=patientOrganization;
        doctorNameLable.setText(account.getName());
        populateTable();


    }
    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) viewVitalSignsJTable.getModel();

        model.setRowCount(0);

        if (userAccount.getWorkQueue().getWorkRequestList() != null) {
            for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
                if (request!= null && request instanceof PatientDoctorWorkRequest) {
                    PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest) request;
                    if (patientDoctorWorkRequest.getDoctor()== userAccount) {
                    Object[] row = new Object[7];
                    row[0] = patientDoctorWorkRequest;
                    row[1] = patientDoctorWorkRequest.getPatientName();
                    row[2] = patientDoctorWorkRequest.getVsNormalorNot();
                    row[3] = patientDoctorWorkRequest.getFtNormalorNot();
                    row[4] = patientDoctorWorkRequest.getLabStatus() == null ? null : patientDoctorWorkRequest.getLabStatus();
                    row[5] = patientDoctorWorkRequest.getPreStatus() == null ? null : patientDoctorWorkRequest.getPreStatus();
                    row[6] = patientDoctorWorkRequest.getRespondStatus() == null ? null : patientDoctorWorkRequest.getRespondStatus();
                    model.addRow(row);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        doctorNameLable = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewVitalSignsJTable = new javax.swing.JTable();
        respondJButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        reportToGovernmentHHSDJButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        ViewDonorDetailJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel2.setBackground(new java.awt.Color(0, 153, 153));
        jLabel2.setFont(new java.awt.Font("American Typewriter", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("!");
        jLabel2.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 204));
        jLabel9.setText("My Patients List");

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setFont(new java.awt.Font("American Typewriter", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Welcome");
        jLabel1.setEnabled(false);

        doctorNameLable.setBackground(new java.awt.Color(0, 153, 153));
        doctorNameLable.setFont(new java.awt.Font("American Typewriter", 0, 14)); // NOI18N
        doctorNameLable.setForeground(new java.awt.Color(51, 51, 51));
        doctorNameLable.setText("<doctorName>");
        doctorNameLable.setEnabled(false);

        viewVitalSignsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Timestamp", "Patient Name", "Vital Signs", "Fitness", "Lab Status", "Prescription", "Respond"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(viewVitalSignsJTable);

        respondJButton.setText("Respond To Patient");
        respondJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respondJButtonActionPerformed(evt);
            }
        });

        jButton6.setText("Request / View Test");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Make / View Prescription");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        reportToGovernmentHHSDJButton.setText("Report to Government Health and Human Services Department");
        reportToGovernmentHHSDJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportToGovernmentHHSDJButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Smart Health Management System");

        jButton8.setText("Request Vaccination");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        ViewDonorDetailJButton.setText("View Donor Details");
        ViewDonorDetailJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewDonorDetailJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(doctorNameLable)
                .addGap(6, 6, 6)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(263, 263, 263))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(respondJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jButton7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reportToGovernmentHHSDJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ViewDonorDetailJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(doctorNameLable)
                            .addComponent(jLabel2))))
                .addGap(84, 84, 84)
                .addComponent(jLabel9)
                .addGap(64, 64, 64)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(respondJButton)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportToGovernmentHHSDJButton)
                    .addComponent(jButton8)
                    .addComponent(ViewDonorDetailJButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void reportToGovernmentHHSDJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportToGovernmentHHSDJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewVitalSignsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);

        }else{
            
            PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest)viewVitalSignsJTable.getValueAt(selectedRow, 0);
            
            
            patientDoctorWorkRequest.setSenderEnterprise(enterprise);
            patientDoctorWorkRequest.setDoctor(userAccount);
            
            Network targetNetwork = null;

            for (Network network : ecoSystem.getNetworkList()) {
                for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (e == enterprise) {
                        targetNetwork = network;
                        break;
                    }
                }
            }

            Organization org = null;
            for (Enterprise e : targetNetwork.getEnterpriseDirectory().getEnterpriseList()) {         
                if (e instanceof GovernmentEnterprise) {
                    GovernmentEnterprise emfe =(GovernmentEnterprise)e;
                    for(Organization o:emfe.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof HealthAndHumanServicesOrganization){
                            org=o;
                            break;
                        }
                    }
                }
            }      

            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(patientDoctorWorkRequest);
                //userAccount.getWorkQueue().getWorkRequestList().add(request);
                JOptionPane.showMessageDialog(null, "Success! ");
            }

        }

        
        
    }//GEN-LAST:event_reportToGovernmentHHSDJButtonActionPerformed

    private void respondJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respondJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewVitalSignsJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);

        }
        
        PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest) viewVitalSignsJTable.getValueAt(selectedRow, 0);
        patientDoctorWorkRequest.setRespondStatus("Processing");

        FitnessRecordRespondJPanel panel = new FitnessRecordRespondJPanel(userProcessContainer,enterprise,patientDoctorWorkRequest);
        userProcessContainer.add("FitnessRecordRespondJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_respondJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewVitalSignsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);

        }else{
            PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest)viewVitalSignsJTable.getValueAt(selectedRow, 0);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("RequestandViewTestJPanel", new RequestandViewTestJPanel(userProcessContainer,userAccount, organization, enterprise,patientDoctorWorkRequest));
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewVitalSignsJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);

        }
            PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest) viewVitalSignsJTable.getValueAt(selectedRow, 0);

        MakeAndViewPrescriptionJPanel panel = new MakeAndViewPrescriptionJPanel(userProcessContainer,userAccount,organization,enterprise,ecoSystem,patientDoctorWorkRequest);
        userProcessContainer.add("MakeAndViewPrescriptionJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewVitalSignsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);

        }else{
            PatientDoctorWorkRequest patientDoctorWorkRequest = (PatientDoctorWorkRequest)viewVitalSignsJTable.getValueAt(selectedRow, 0);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
         userProcessContainer.add("RequestVaccinationJPanel", new RequestVaccinationJPanel(userProcessContainer,userAccount, organization, enterprise,patientDoctorWorkRequest,ecoSystem));
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void ViewDonorDetailJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewDonorDetailJButtonActionPerformed
         DonorDetailJPanel donorDetailJPanel = new DonorDetailJPanel(userProcessContainer, userAccount,organization, enterprise, ecoSystem);
//
      // Add the panel to userProcessContainer
        userProcessContainer.add("DonorDetailJPanel", donorDetailJPanel);
        // Configure the layout to display the new panel
       CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_ViewDonorDetailJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ViewDonorDetailJButton;
    private javax.swing.JLabel doctorNameLable;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton reportToGovernmentHHSDJButton;
    private javax.swing.JButton respondJButton;
    private javax.swing.JTable viewVitalSignsJTable;
    // End of variables declaration//GEN-END:variables
}
