/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.VaccineManagementAdminRole;
 
import Model.EcoSystem;
import Model.Enterprise.Enterprise;
import Model.Organization.VaccinationManagementOrganization;
import Model.Role.VaccineRequest;
import Model.Role.Vaccine;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.PatientDoctorWorkRequest;
import Model.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
/**
 *
 * @author k.bhuvaneshwari
 */
public class VaccinationWorkAreaJPanel extends javax.swing.JPanel {
 private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private VaccinationManagementOrganization organization;
    private EcoSystem ecoSystem;
    
     private DefaultTableModel vaccineInventoryModel;
    /**
     * Creates new form VaccinationWorkAreaJPanel
     */
    public VaccinationWorkAreaJPanel(JPanel userProcessContainer1, UserAccount account, VaccinationManagementOrganization  organization, Enterprise enterprise1, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = (VaccinationManagementOrganization)organization;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        populateTable();
        
         initializeVaccineInventory();
        
    }
    public void populateTable() {
    DefaultTableModel model = (DefaultTableModel) vaccineRequestJTable.getModel();
    model.setRowCount(0);

    for (VaccineRequest request : utils.SharedData.vaccineRequestList) {
        Object[] row = new Object[6];
        row[0] = request.getDate(); // Populate Date if available
        row[1] = request.getVaccineName(); // Vaccination Name
        row[2] = request.getQuantity(); // Demand Quantity
        row[3] = request.getSender(); // Sender
        row[4] = request.getReceiver(); // Receiver
        row[5] = request.getStatus(); // Status

        model.addRow(row);
    }
}

 private void initializeVaccineInventory() {
    if (utils.SharedData.vaccineInventoryList == null) {
        utils.SharedData.vaccineInventoryList = new ArrayList<>();
        utils.SharedData.vaccineInventoryList.add(new Vaccine("Pfizer", 50));
        utils.SharedData.vaccineInventoryList.add(new Vaccine("Moderna", 30));
        utils.SharedData.vaccineInventoryList.add(new Vaccine("J&J", 20));
    }

    String[] vaccineHeaders = {"Vaccine Name", "Quantity"};
    Object[][] vaccineData = new Object[utils.SharedData.vaccineInventoryList.size()][2];

    for (int i = 0; i < utils.SharedData.vaccineInventoryList.size(); i++) {
        Vaccine vaccine = utils.SharedData.vaccineInventoryList.get(i);
        vaccineData[i][0] = vaccine.getName();
        vaccineData[i][1] = vaccine.getQuantity();
    }

    vaccineInventoryModel = new DefaultTableModel(vaccineData, vaccineHeaders);
    vaccineInventoryJTable.setModel(vaccineInventoryModel);
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vaccineRequestJTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineInventoryJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 204));
        jLabel12.setText("Vaccination Work Area");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 280, -1));

        vaccineRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Vaccination Name", "Demand Quantity", "Sender", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(vaccineRequestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 930, 136));

        jButton2.setText("Assign To Me");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, -1, -1));

        jButton1.setText("Process");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 110, -1));

        vaccineInventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vaccine Name", "Vaccine quantity"
            }
        ));
        jScrollPane1.setViewportView(vaccineInventoryJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, -1, 240));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "please select one row");
        }else{
            PatientDoctorWorkRequest request = (PatientDoctorWorkRequest) vaccineRequestJTable.getValueAt(selectedRow, 0);
            request.setReceiveEnterprise(enterprise);
            populateTable();
            JOptionPane.showMessageDialog(null, "Success");

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select one row");
            return;
        }

        // Retrieve the selected VaccineRequest from the table
        VaccineRequest selectedRequest = utils.SharedData.vaccineRequestList.get(selectedRow);

        // Get the vaccine name from the selected request
        String vaccineName = selectedRequest.getVaccineName();

        // Update the status to "Sent"
        selectedRequest.setStatus("Sent");

        // Update the inventory
        updateInventory(vaccineName);

        // Refresh the table to reflect the changes
        populateTable();

        JOptionPane.showMessageDialog(null, "Request processed successfully and marked as Sent!");
    
        
        

    }//GEN-LAST:event_jButton1ActionPerformed
public void updateInventory(String vaccineName) {
    boolean isUpdated = false;

    for (int i = 0; i < utils.SharedData.vaccineInventoryList.size(); i++) {
        Vaccine vaccine = utils.SharedData.vaccineInventoryList.get(i);

        // Match the vaccine name with the inventory list
        if (vaccine.getName().equalsIgnoreCase(vaccineName)) {
            if (vaccine.getQuantity() > 0) {
                // Decrease the quantity in the inventory list
                vaccine.setQuantity(vaccine.getQuantity() - 1);

                // Update the table model to reflect the change
                vaccineInventoryModel.setValueAt(vaccine.getQuantity(), i, 1);

                isUpdated = true;
                break;
            } else {
                JOptionPane.showMessageDialog(null, "Insufficient stock for " + vaccineName);
                return; // Stop processing if stock is insufficient
            }
        }
    }

    if (!isUpdated) {
        JOptionPane.showMessageDialog(null, "Vaccine not found in inventory");
    } else {
        // Refresh the table to reflect the changes
        vaccineInventoryJTable.repaint();
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable vaccineInventoryJTable;
    private javax.swing.JTable vaccineRequestJTable;
    // End of variables declaration//GEN-END:variables

   

   
}
